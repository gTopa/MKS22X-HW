public class MyStack<T>{

    private MyLinkedList<T> l;
    
    /**
     * Adds the given item to the top of the stack.
     */
    public void push(T item){
	l.add(0);
    }

    /**
     * Removes the top item from the stack and returns it.
     * @exception java.util.NoSuchElementException if the queue is empty.
     */
    public T pop(){
	return l.remove(0);
    }

    /**
     * Returns the top item from the stack without popping it.
     * @exception java.util.NoSuchElementException if the queue is empty.
     */
    public T peek(){
	return l.get(0);
    }

    /**
     * Returns the number of items currently in the stack.
     */
    public int size(){
	return l.size();
    }

    /**
     * Returns whether the stack is empty or not.
     */
    public boolean isEmpty(){
	return l.size()==0;
    }
}
